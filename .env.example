# =============================================================================
# ETHEREUM SMART CONTRACT AUDITOR AGENT - CONFIGURAÇÃO
# =============================================================================

# -----------------------------------------------------------------------------
# CONFIGURAÇÕES DA BLOCKCHAIN
# -----------------------------------------------------------------------------

# URL do provedor Web3 (Infura, Alchemy, ou nó próprio)
# Para Infura: wss://mainnet.infura.io/ws/v3/YOUR_PROJECT_ID
# Para Alchemy: wss://eth-mainnet.alchemyapi.io/v2/YOUR_API_KEY
# Para nó local: ws://localhost:8546
WEB3_PROVIDER_URL=wss://mainnet.infura.io/ws/v3/YOUR_PROJECT_ID

# Chave da API do Etherscan para recuperação de código-fonte
# Obtenha em: https://etherscan.io/apis
ETHERSCAN_API_KEY=YOUR_ETHERSCAN_API_KEY

# Rede Ethereum (mainnet, goerli, sepolia)
ETHEREUM_NETWORK=mainnet

# -----------------------------------------------------------------------------
# CONFIGURAÇÕES DO BANCO DE DADOS
# -----------------------------------------------------------------------------

# URL do banco de dados SQLite
DATABASE_URL=sqlite:///database/app.db

# Backup automático do banco de dados (true/false)
AUTO_BACKUP_DB=true

# Intervalo de backup em horas
BACKUP_INTERVAL_HOURS=24

# -----------------------------------------------------------------------------
# CONFIGURAÇÕES DO AGENTE AUDITOR
# -----------------------------------------------------------------------------

# Número máximo de auditorias simultâneas
MAX_CONCURRENT_AUDITS=3

# Timeout para análise de um contrato (em segundos)
ANALYSIS_TIMEOUT=300

# Intervalo de verificação de novos contratos (em segundos)
MONITORING_INTERVAL=30

# Diretório para armazenar relatórios
REPORTS_DIR=reports

# Habilitar cache de resultados (true/false)
ENABLE_CACHE=true

# Tempo de vida do cache em horas
CACHE_TTL_HOURS=24

# -----------------------------------------------------------------------------
# CONFIGURAÇÕES DE ALERTAS
# -----------------------------------------------------------------------------

# Severidade mínima para envio de alertas (critical, high, medium, low, info)
MIN_ALERT_SEVERITY=high

# Máximo de alertas por contrato
MAX_ALERTS_PER_CONTRACT=10

# Tempo de cooldown entre alertas em minutos
ALERT_COOLDOWN_MINUTES=5

# -----------------------------------------------------------------------------
# WEBHOOK ALERTS
# -----------------------------------------------------------------------------

# Habilitar alertas via webhook (true/false)
WEBHOOK_ENABLED=false

# URL do webhook para receber alertas
WEBHOOK_URL=https://your-webhook-url.com/alerts

# Timeout para webhook em segundos
WEBHOOK_TIMEOUT=30

# Número de tentativas em caso de falha
WEBHOOK_RETRY_ATTEMPTS=3

# Delay entre tentativas em segundos
WEBHOOK_RETRY_DELAY=5

# -----------------------------------------------------------------------------
# EMAIL ALERTS
# -----------------------------------------------------------------------------

# Habilitar alertas via email (true/false)
EMAIL_ENABLED=false

# Servidor SMTP
SMTP_SERVER=smtp.gmail.com

# Porta SMTP
SMTP_PORT=587

# Usar TLS (true/false)
SMTP_USE_TLS=true

# Usuário SMTP
SMTP_USERNAME=your-email@gmail.com

# Senha SMTP (use App Password para Gmail)
SMTP_PASSWORD=your-app-password

# Email remetente
FROM_EMAIL=auditor@yourcompany.com

# Emails destinatários (separados por vírgula)
TO_EMAILS=admin@yourcompany.com,security@yourcompany.com

# -----------------------------------------------------------------------------
# SLACK ALERTS
# -----------------------------------------------------------------------------

# Habilitar alertas via Slack (true/false)
SLACK_ENABLED=false

# URL do webhook do Slack
SLACK_WEBHOOK_URL=https://hooks.slack.com/services/YOUR/SLACK/WEBHOOK

# Canal do Slack
SLACK_CHANNEL=#security-alerts

# Nome do bot
SLACK_USERNAME=Ethereum Auditor Bot

# -----------------------------------------------------------------------------
# DISCORD ALERTS
# -----------------------------------------------------------------------------

# Habilitar alertas via Discord (true/false)
DISCORD_ENABLED=false

# URL do webhook do Discord
DISCORD_WEBHOOK_URL=https://discord.com/api/webhooks/YOUR/DISCORD/WEBHOOK

# -----------------------------------------------------------------------------
# CONFIGURAÇÕES DO SLITHER
# -----------------------------------------------------------------------------

# Habilitar análise com Slither (true/false)
SLITHER_ENABLED=true

# Timeout para análise Slither em segundos
SLITHER_TIMEOUT=300

# Detectores Slither habilitados (separados por vírgula)
SLITHER_DETECTORS=reentrancy-eth,reentrancy-no-eth,uninitialized-state,uninitialized-storage,arbitrary-send,controlled-delegatecall,weak-prng,suicidal,assembly,assert-state-change,boolean-equal,deprecated-standards

# Nível de otimização do compilador
SOLC_OPTIMIZATION=true

# Número de runs de otimização
SOLC_RUNS=200

# -----------------------------------------------------------------------------
# CONFIGURAÇÕES DE ANÁLISE CUSTOMIZADA
# -----------------------------------------------------------------------------

# Habilitar padrões customizados (true/false)
CUSTOM_PATTERNS_ENABLED=true

# Timeout para análise de padrões em segundos
CUSTOM_PATTERNS_TIMEOUT=60

# -----------------------------------------------------------------------------
# CONFIGURAÇÕES DE LOGGING
# -----------------------------------------------------------------------------

# Nível de log (DEBUG, INFO, WARNING, ERROR, CRITICAL)
LOG_LEVEL=INFO

# Arquivo de log
LOG_FILE=logs/auditor.log

# Tamanho máximo do arquivo de log em MB
LOG_MAX_SIZE_MB=100

# Número de arquivos de backup
LOG_BACKUP_COUNT=5

# Formato do log
LOG_FORMAT=%(asctime)s - %(name)s - %(levelname)s - %(message)s

# -----------------------------------------------------------------------------
# CONFIGURAÇÕES DE SEGURANÇA
# -----------------------------------------------------------------------------

# Chave secreta para Flask
SECRET_KEY=your-super-secret-key-change-this-in-production

# Habilitar CORS (true/false)
ENABLE_CORS=true

# Origens permitidas para CORS (separadas por vírgula)
CORS_ORIGINS=http://localhost:3000,http://localhost:5173,http://localhost:5174

# Habilitar autenticação da API (true/false)
API_AUTH_ENABLED=false

# Token de autenticação da API
API_AUTH_TOKEN=your-api-auth-token

# -----------------------------------------------------------------------------
# CONFIGURAÇÕES DE PERFORMANCE
# -----------------------------------------------------------------------------

# Tamanho da pool de conexões do banco
DB_POOL_SIZE=10

# Timeout de conexão do banco em segundos
DB_TIMEOUT=30

# Tamanho máximo da fila de processamento
MAX_QUEUE_SIZE=1000

# Intervalo de limpeza de cache em horas
CACHE_CLEANUP_INTERVAL=6

# -----------------------------------------------------------------------------
# CONFIGURAÇÕES DE DESENVOLVIMENTO
# -----------------------------------------------------------------------------

# Modo debug (true/false)
DEBUG=false

# Porta do servidor Flask
FLASK_PORT=5000

# Host do servidor Flask
FLASK_HOST=0.0.0.0

# Recarregar automaticamente em mudanças (true/false)
FLASK_RELOAD=false

# -----------------------------------------------------------------------------
# CONFIGURAÇÕES DE MONITORAMENTO
# -----------------------------------------------------------------------------

# Habilitar métricas Prometheus (true/false)
PROMETHEUS_ENABLED=false

# Porta para métricas Prometheus
PROMETHEUS_PORT=9090

# Habilitar health check endpoint (true/false)
HEALTH_CHECK_ENABLED=true

# Intervalo de health check em segundos
HEALTH_CHECK_INTERVAL=60

# -----------------------------------------------------------------------------
# CONFIGURAÇÕES AVANÇADAS
# -----------------------------------------------------------------------------

# Usar proxy para requisições HTTP (opcional)
HTTP_PROXY=

# Usar proxy para requisições HTTPS (opcional)
HTTPS_PROXY=

# User-Agent para requisições HTTP
USER_AGENT=Ethereum-Auditor-Agent/1.0

# Timeout padrão para requisições HTTP em segundos
HTTP_TIMEOUT=30

# Número máximo de tentativas para requisições HTTP
HTTP_MAX_RETRIES=3

# Delay entre tentativas HTTP em segundos
HTTP_RETRY_DELAY=1

